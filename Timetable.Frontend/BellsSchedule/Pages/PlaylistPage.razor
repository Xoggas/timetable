@page "/playlist"
@rendermode InteractiveServer
@implements IDisposable
@using Timetable.Frontend.LessonsSchedule.Components.Viewer
@inject BellTableService BellTableService
@inject BellTableEventService BellTableEventService

<PageTitle>Плейлист</PageTitle>

<BellsScheduleHeader/>

<ConnectionIssuesOverlay IsVisible="_isReconnectionOverlayVisible"/>

<AudioPlayer @ref="_audioPlayerRef"
             IsLocked="_isPlayerLocked"
             Source="https://icecast-radioclassica.cdnvideo.ru/radioclassica"
             @bind-Volume="_musicVolume"/>

<div></div>

@code
{
    private AudioPlayer _audioPlayerRef = null!;
    private int _musicVolume = 10;
    private bool _isPlayerLocked;
    private bool _isReconnectionOverlayVisible;

    protected override void OnInitialized()
    {
        BellTableEventService.Reconnected += OnReconnect;
        BellTableEventService.Disconnected += OnDisconnect;
        BellTableEventService.TimeStateUpdated += UpdatePlaybackState;
    }

    protected override async Task OnInitializedAsync()
    {
        var timeState = await BellTableService.GetTimeStateAsync();
        UpdatePlaybackState(timeState);
    }

    private void UpdatePlaybackState(TimeState timeState)
    {
        if (timeState.LessonState is LessonState.Break or LessonState.BeforeLessons or LessonState.AfterLessons)
        {
            _audioPlayerRef.Play();
        }
        else
        {
            _audioPlayerRef.Pause();
        }

        _isPlayerLocked = timeState.LessonState is LessonState.LessonIsGoing;

        InvokeAsync(StateHasChanged);
    }

    private async Task OnDisconnect()
    {
        _isReconnectionOverlayVisible = true;

        await InvokeAsync(StateHasChanged);
    }

    private async Task OnReconnect()
    {
        _isReconnectionOverlayVisible = false;

        var timeState = await BellTableService.GetTimeStateAsync();
        
        UpdatePlaybackState(timeState);
    }

    public void Dispose()
    {
        BellTableEventService.Reconnected -= OnReconnect;
        BellTableEventService.Disconnected -= OnDisconnect;
        BellTableEventService.TimeStateUpdated -= UpdatePlaybackState;
    }
}