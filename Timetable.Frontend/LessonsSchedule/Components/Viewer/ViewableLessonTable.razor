@using Microsoft.AspNetCore.SignalR.Client
@using Timetable.Frontend.Shared.Services
@inject ApiUrlService ApiUrlService
@inject LessonTableService LessonTableService
@implements IAsyncDisposable

<table class="table">
    @foreach (var (row, rowIndex) in _table.Select((x, i) => (x, i)))
    {
        <tr class="row">
            @if (rowIndex == 0)
            {
                <!-- filling cell -->
                <td></td>

                @foreach (var title in row)
                {
                    <td class="header-cell">
                        @title
                    </td>
                }
            }
            else
            {
                <td class="cell" index>
                    @rowIndex
                </td>

                @foreach (var lesson in row)
                {
                    <td class="cell">
                        @lesson
                    </td>
                }
            }
        </tr>
    }
</table>

@code
{
    [Parameter] public CustomDayOfWeek DayOfWeek { get; set; }

    private HubConnection? _hubConnection;

    private List<List<string>> _table = [];

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(ApiUrlService.Retrieve("lessons-schedule"))
            .WithAutomaticReconnect()
            .Build();

        _hubConnection.On("Update", async () => await UpdateTable());

        await _hubConnection.StartAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await UpdateTable();
    }

    private async Task UpdateTable()
    {
        _table = (await LessonTableService.GetByDayOfWeek(DayOfWeek)).Lessons;

        await InvokeAsync(StateHasChanged);
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection != null)
        {
            await _hubConnection.DisposeAsync();
        }
    }
}